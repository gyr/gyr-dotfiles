##################################
#
# Author: Gustavo Yokoyama Ribeiro
# File:   .gyrprofile
# Update: 20181129 13:26:08
# (C) Copyright 2010 Gustavo Yokoyama Ribeiro
# Licensed under CreativeCommons Attribution-ShareAlike 3.0 Unsupported
# http://creativecommons.org/licenses/by-sa/3.0/ for more info.
#
##################################

GYR_OS=$(uname -s | tr '[:upper:]' '[:lower:]')
if [ "${GYR_OS}" = 'linux' ]; then
    if hash pacman 2> /dev/null; then
        GYR_OS='arch'
    elif [ -e /etc/os-release ]; then
        GYR_OS="$(grep '^ID=' /etc/os-release | cut -d'=' -f2 | tr -d '\"' | tr '[:upper:]' '[:lower:]')"
        case ${GYR_OS} in
            fedora|centos|rhel)
                GYR_OS="rh"
                ;;
            opensuse*|sle*)
                GYR_OS="suse"
                ;;
        esac
    fi
fi
export GYR_OS

#######
# PATH
PATH=/etc:${PATH}
PATH=/usr/bin:${PATH}
PATH=/usr/local:${PATH}
PATH=/usr/local/bin:${PATH}
PATH=/usr/local/sbin:${PATH}
PATH=/usr/sbin:${PATH}
PATH=/sbin:${PATH}
PATH=.:${PATH}
PATH=${HOME}:${PATH}
PATH=${HOME}/.local/bin:${PATH}
# Ruby
if hash ruby 2> /dev/null; then
    PATH="$(ruby -e 'print Gem.user_dir')/bin:${PATH}"
fi

GYR_PATH="${HOME}/.gyr.d"
export GYR_PATH

PATH=${GYR_PATH}:${PATH}

#######
# SCRIPTS
# Common
[ -d ${GYR_PATH}/bin ] && PATH=${GYR_PATH}/bin:${PATH}
[ -d ${GYR_PATH}/bin/3pp ] && PATH=${GYR_PATH}/bin/3pp:${PATH}


#######
# SETTINGS
# Common
hash vim 2> /dev/null && { EDITOR=vim ; WINEDITOR=vim ; VISUAL=vim ; } || { EDITOR=vi ; WINEDITOR=vi ; VISUAL=vi ; }
export EDITOR
export WINEDITOR
export VISUAL
hash less 2> /dev/null && PAGER=less || PAGER=more
export PAGER
export LESS='-FXRS#3Mgi'
# F: quit if the entire input fits on a single screen.
# R: Raw color codes in output (don't remove color codes)
# S: Chop long lines, instead of wrapping.
# #3: Scroll 3 columns horizontally at a time.
# M: Long prompts (more verbosely)
# g: Highlite results when searching with slash key (/)
# i: Case insensitive in search
export RST_IFS=${IFS}
export GREP_COLOR=31
export CVS_RSH=ssh
export TZ='America/Sao_Paulo'
export BC_ENV_ARGS="${GYR_PATH}/dotfiles/bcrc"

# Restarting Connections
# (http://blogs.perl.org/users/smylers/2011/08/ssh-productivity-tips.html)
export AUTOSSH_PORT=0

# Python
if hash python 2> /dev/null; then
    export PYTHONSTARTUP="${GYR_PATH}/dotfiles/pythonstartup"
fi
# Keychain
if hash keychain 2> /dev/null; then
    ###################################################################################
    # The --clear option make sure Intruder cannot use your existing SSH-Agents keys
    # i.e. Only allow cron jobs to use password less login
    ###################################################################################
    #/usr/bin/keychain --clear $HOME/.ssh/id_rsa
    ###########################################################################
    # allow $USER to use keys. Only enter once and it will remain enabled till
    # you delete it or reboot the server
    ###########################################################################
    keychain --agents gpg,ssh $HOME/.ssh/id_rsa_ibm B0E4F0BA

    source $HOME/.keychain/$HOSTNAME-sh
    source $HOME/.keychain/$HOSTNAME-sh-gpg
fi
# ripgrep
if hash rg 2> /dev/null; then
    export RIPGREP_CONFIG_PATH="${GYR_PATH}/dotfiles/ripgreprc"
fi

# projects
for proj_dir in "${GYR_PATH}"/*.d ; do
    if [ -d "${proj_dir}" ]; then
        proj_rc_file=$(basename ${proj_dir})
        proj_rc_file=${proj_dir}/${proj_rc_file%.*}profile
        if [ -f "${proj_rc_file}" ]; then
            . ${proj_rc_file}
        fi
    fi
done
unset -v proj_dir
unset -v proj_rc_file

#######
# Remove duplicates entries on PATH
PATH=$(echo ${PATH} | awk 'BEGIN{RS=":"}{print}' | awk '{vetor[$0]++; if (vetor[$0]==1){print}}' |  awk '/./' | awk 'BEGIN { ORS=":" } { print }')
# Remove the last ':' (not REALLY needed)
PATH=${PATH%:}

export PATH

#######
# Disable email checking.
unset MAILCHECK

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# vim: set filetype=sh fileformat=unix foldmethod=indent
